---
layout: news
title: Weld 3.0.4.Final
author: Matej Novotny
priority: 1
change_frequency: weekly
excerpt: Weld 3.0.4.Final released
desc: Weld 3.0.4.Final released
tags: [release]
---
:linkattrs:

Weld 3.0.4.Final is here along with Weld API 3.0.SP3 - make sure you update both.


In this release we took first steps towards eliminating illegal access in JDK 10+.
The good news is, Weld should now be able to run with `--illegal-access=deny`.
The project and CI infrastructure around it went through a lot of changes to be able to build and execute on JDK 10 and there is still more to come.
There are also numerous optimizations - `beans.xml` parsing, AT identifier representation, optional memory savings.
And of course, bug fixes, so let us take a look at all of it.

Noticeable amount of reports, suggestions and even fixes came from the community - for that you have our thanks (and a new version of Weld of course)!

Fixes and improvements:

* Weld Core
** Correct proxy generation for class hierarchy with abstract class and generics (link:https://issues.jboss.org/browse/WELD-2470[WELD-2470, window="_blank"])
** Opt-in enhancement in HTTP session replication, more eager approach (link:https://issues.jboss.org/browse/WELD-1130[WELD-1130, window="_blank"])
*** Note that WildFly does not need or use this
** Fix NPE which could occur with `SecurityManager` if `getPermissions()` returned `null` (link:https://issues.jboss.org/browse/WELD-2464[WELD-2464, window="_blank"])
** Relax bean type check in `BeanManager.getInjectableReference()` (link:https://issues.jboss.org/browse/WELD-2466[WELD-2466, window="_blank"])
** `AfterTypeDiscovery` did not allow to remove declared interceptors/decorators/alternatives correctly (link:https://issues.jboss.org/browse/WELD-2479[WELD-2479, window="_blank"])
** Two globally selected alternatives with the same priority should result in ambiguous dependency (link:https://issues.jboss.org/browse/WELD-2482[WELD-2482, window="_blank"])
** `Configurator` SPI now uses sensible `toString()` so that user can tell what went wrong (link:https://issues.jboss.org/browse/WELD-2484[WELD-2484, window="_blank"])
** Improve performance of `beans.xml` parsing (link:https://issues.jboss.org/browse/WELD-2469[WELD-2469, window="_blank"])
** Introduce an optional configuration allowing Weld to perform cleanup after boot (link:https://issues.jboss.org/browse/WELD-2457[WELD-2457, window="_blank"] and link:https://issues.jboss.org/browse/WELD-2475[WELD-2475, window="_blank"])
*** In EE servers, if integrators meet certain conditions and allow for this, Weld can them drop metadata from some beans which will not be used in runtime
*** See _Docs_ section for links
** Optimise `String` representation of `AnnotatedTypeIdentifier` (link:https://issues.jboss.org/browse/WELD-2477[WELD-2477, window="_blank"])

* Weld SE
** Fix NPE which could occur if trying to intercept a method called by constructor (link:https://issues.jboss.org/browse/WELD-2478[WELD-2478, window="_blank"] and link:https://issues.jboss.org/browse/WELD-2473[WELD-2473, window="_blank"])

* JDK 9/10 and onwards (link:https://issues.jboss.org/browse/WELD-2460[WELD-2460, window="_blank"])
** Weld uses JDK's internal BCEL classes (link:https://issues.jboss.org/browse/WELD-2490[WELD-2490, window="_blank"])
*** This is only used to report errors in generated bytecode on proxies/subclasses
*** We added a dependency on `org.apache.bcel:bcel` which enables this functionality without reflective access to internal libraries
*** In order to keep Weld's footprint minimal, this dependency is optional only
** Upgrade JBoss Classfilewriter to 1.2.2.Final (link:https://issues.jboss.org/browse/WELD-2487[WELD-2487, window="_blank"])
*** Eliminates another bunch of illegal access problems

* Probe development tool
** Probe now uses JDK-agnostic `Annotation.toString()` version (link:https://issues.jboss.org/browse/WELD-2463[WELD-2463, window="_blank"])
** Correction to licences in Probe (link:https://issues.jboss.org/browse/WELD-2480[WELD-2480, window="_blank"])

* Docs
** `WeldTerminalListener` had wrong FQCN in our documentation which resulted in errors when trying to use it in Tomcat (link:https://issues.jboss.org/browse/WELD-2486[WELD-2486, window="_blank"])
** Newly added memory-saving option `ConfigurationKey.ALLOW_OPTIMIZED_CLEANUP` is documented (link:https://issues.jboss.org/browse/WELD-2472[WELD-2472, window="_blank"])
*** If you wish to learn more, please glance link:http://docs.jboss.org/weld/reference/3.0.4.Final/en-US/html_single/#remove-unused-beans[here, window="_blank"]
*** Please note that integrator has to allow for this optimization, otherwise your settings won't count (_psst, WildFly 12 allows this!_)

== WildFly Patch

As usual, a link:http://download.jboss.org/weld/3.0.4.Final/wildfly-12.0.0.Final-weld-3.0.4.Final-patch.zip[patch for WildFly 12.0.0.Final, window="_blank"] is available.
Please note that Weld 3.0.4.Final will still allow you to boot up WildFly in either EE 7 or EE 8 mode, whichever you prefer.

If this is the first time you hear about EE 8 mode for WildFly, check link:http://wildfly.org/news/2018/02/28/WildFly12-Final-Released[this post, window="_blank"].

If youâ€™re not familiar with patching WildFly, check the link:/documentation/#12[FAQ].

&#91; link:/download/[Download] &#93;
&#91; link:http://docs.jboss.org/weld/reference/3.0.4.Final/en-US/html/[Documentation, window="_blank"] &#93;
&#91; link:https://issues.jboss.org/secure/ReleaseNote.jspa?projectId=12310891&version=12336871[Release notes, window="_blank"] &#93;
