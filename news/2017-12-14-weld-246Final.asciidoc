---
layout: news
title: Weld 2.4.6.Final
author: Matej Novotny
priority: 1
change_frequency: weekly
excerpt: Weld 2.4.6.Final released
desc: Weld 2.4.6.Final released
tags: [release]
---
:linkattrs:

Time has come for another round of Weld 2.4 bugfix release.
But that's not all - this time there is also new API to go along with this release - Weld API 2.4.SP2.

Among other things you can now obtain interceptor binding from `javax.interceptor.InvocationContext`, use enriched version of `javax.enterprise.event.Event` or select `javax.enterprise.inject.Instance` based on `java.lang.reflect.Type`.

Notable fixes and improvements:

* Weld Core:
** Improved subclass generation mechanism for generic interceptors (link:https://issues.jboss.org/browse/WELD-2414[WELD-2414, window="_blank"])
** Corrected proxy creation for signed classes (link:https://issues.jboss.org/browse/WELD-2425[WELD-2425, window="_blank"])
** Correct `InjectionPoint` bean behaviour when used within `AfterBeanDiscovery` observer (link:https://issues.jboss.org/browse/WELD-2429[WELD-2429, window="_blank"])

* Weld SE
** There are now multiple convenient error-proof methods to quickly configure SE container (link:https://issues.jboss.org/browse/WELD-2426[WELD-2426, window="_blank"])
*** `Weld.enableDevMode()`, `Weld.scanClasspathEntries()`, ...

* Weld API/SPI
** `WeldInstance` has several improvements
*** It now allows you to `select()` beans based on `java.lang.reflect.Type` (link:https://issues.jboss.org/browse/WELD-2427[WELD-2427, window="_blank"])
*** `WeldInstance.Handler` had become lazy which means you can now iterate/filter/sort `WeldInstance` without actually instantiating beans (link:https://issues.jboss.org/browse/WELD-2258[WELD-2258, window="_blank"])
** There is new interface in the API - `WeldEvent` - which can be used in place of well known `Event` but allows you narrow down event type by using `select()` with `java.lang.reflect.Type` (link:https://issues.jboss.org/browse/WELD-2427[WELD-2427, window="_blank"])
** API now contains `WeldInvocationContext`, an enriched version of `javax.interceptor.InvocationContext` which allows to obtain interceptor binding (link:https://issues.jboss.org/browse/WELD-2433[WELD-2433, window="_blank"])
*** There is also a `String` key used to obtain interceptors binding directly from `InvocationContext` (link:https://issues.jboss.org/browse/WELD-2436[WELD-2436, window="_blank"])
*** In order to learn more, please refer to (link:http://docs.jboss.org/weld/reference/latest/en-US/html_single/#_enhanced_version_of_literal_javax_interceptor_invocationcontext_literal[our documentation, window="_blank"])

* Other
** Probe - fixed NPE which might occur when bean had `@Priority` but no other annotation (link:https://issues.jboss.org/browse/WELD-2432[WELD-2432, window="_blank"])
** All the API changes should now be documented within Weld docs

== WildFly Patch

As usual, a link:http://download.jboss.org/weld/2.4.6.Final/wildfly-11.0.0.Final-weld-2.4.6.Final-patch.zip[patch for WildFly 11.0.0.Final, window="_blank"] is available.
If youâ€™re not familiar with patching WildFly, check the link:/documentation/#12[FAQ].

&#91; link:/download/[Download] &#93;
&#91; link:http://docs.jboss.org/weld/reference/2.4.6.Final/en-US/html/[Documentation, window="_blank"] &#93;
&#91; link:https://issues.jboss.org/secure/ReleaseNote.jspa?version=12334958&styleName=Html&projectId=12310891[Release notes, window="_blank"] &#93;
